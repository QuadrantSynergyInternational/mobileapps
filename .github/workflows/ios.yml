name: Build iOS IPA
on:
  workflow_dispatch:
    inputs:
      params:
        type: string
        description: Build Params
        required: true
jobs:
  build:
    runs-on: macOS-latest
    steps:
      - name: Clone Repo
        run: git clone --depth=1 --single-branch --branch=${{ fromJSON(github.event.inputs.params).branch }} https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@${{ fromJSON(github.event.inputs.params).repo }} input
      - name: Clone Provision
        run: git clone --depth=1 --single-branch --branch=main https://admindevopsqsi:${{ secrets.GH_PAT }}@github.com/admindevopsqsi/ios-provision.git provision
      - name: Get Apps Version
        id: package-version
        working-directory: input
        run: |
          current_version=$(node -e "console.log(require('./package.json').version)")
          echo "current-version=$current_version" >> "$GITHUB_OUTPUT"
      - name: Logging
        run: |
          curl -s -L -G -X POST \
          -H "X-AppCenter-Secret: ${{ secrets.APPCENTER_SECRET }}" \
          --data-urlencode 'wf_id=${{ github.run_id }}' \
          --data-urlencode 'params=${{ github.event.inputs.params }}' \
          --data-urlencode 'uniqueId=${{ fromJSON(github.event.inputs.params).uniqueId }}' \
          --data-urlencode 'version=${{ steps.package-version.outputs.current-version }}' \
          --data-urlencode 'platform=ios' \
          https://${{ secrets.APPCENTER_DOMAIN }}/projects/${{ fromJSON(github.event.inputs.params).projectid }}/trigger-log
      - name: Validate P12
        run: |
          set -euo pipefail
          P12_FILE="./provision/${{ fromJSON(github.event.inputs.params).projectid }}/${{ fromJSON(github.event.inputs.params).provisionfile != '' && fromJSON(github.event.inputs.params).provisionfile || fromJSON(github.event.inputs.params).branch }}.p12"
          echo "🔧 Creating temporary keychain..."
          security create-keychain -p "" temp.keychain
          
          echo "🔓 Unlocking keychain..."
          security unlock-keychain -p "" temp.keychain
          
          echo "🔍 Validating P12 import..."
          if security import "$P12_FILE" -k temp.keychain -P "${{ fromJSON(github.event.inputs.params).p12pass || '' }}" \
               -T /usr/bin/codesign \
               -T /usr/bin/security \
               -T /usr/bin/productbuild \
               -T /usr/bin/productsign; then
            echo "✅ Import successful"
          else
            echo "❌ Import failed" >&2
            security delete-keychain temp.keychain
            exit 1
          fi
          
          echo "🧹 Cleaning up keychain..."
          security delete-keychain temp.keychain
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: ${{ fromJSON(github.event.inputs.params).ruby != '' }}
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: ./input
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.4
        if: ${{ fromJSON(github.event.inputs.params).node != '' }}
        with:
          node-version: ${{ fromJSON(github.event.inputs.params).node }}
      - name: Install & Cache Watchman
        uses: gerlero/brew-install@v1
        with:
          packages: watchman
      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-${{ fromJSON(github.event.inputs.params).projectid }}
      #   with:
      #     path: |
      #       - ./input/node_modules
      #       - ./input/yarn.lock
      #       - ./input/ios/Pods
      #       - ./input/ios/Podfile.lock
      #     key: ${{ secrets.APPCENTER_SECRET }}
      #     restore-keys: ${{ secrets.APPCENTER_SECRET }}
      - name: Yarn Install
        working-directory: input
        run: yarn install
      - name: Pod Repo
        run: pod repo add QuadrantSpecs https://oktapod.quadrant-si.id/framework/quadrant.specs.git
      - name: Clean Podfile.lock
        run: rm -rf ./input/ios/Podfile.lock
      - name: Pod install
        working-directory: input/ios
        run: pod install
      - name: Download Export Plist
        run: curl --fail-with-body --output export.plist "https://appcenterq.vercel.app/ios-export?projectid=${{ fromJSON(github.event.inputs.params).projectid }}&branch=${{ fromJSON(github.event.inputs.params).branch }}"
      - name: Build IPA
        uses: muhamad-rizki/ios-build-action@v1
        with:
          p12-path: ./provision/${{ fromJSON(github.event.inputs.params).projectid }}/${{ fromJSON(github.event.inputs.params).provisionfile != '' && fromJSON(github.event.inputs.params).provisionfile || fromJSON(github.event.inputs.params).branch }}.p12
          mobileprovision-path: ./provision/${{ fromJSON(github.event.inputs.params).projectid }}/${{ fromJSON(github.event.inputs.params).provisionfile != '' && fromJSON(github.event.inputs.params).provisionfile || fromJSON(github.event.inputs.params).branch }}.mobileprovision
          code-signing-identity: 'iPhone Distribution'
          team-id: ${{ fromJSON(github.event.inputs.params).teamid }}
          certificate-password: ${{ fromJSON(github.event.inputs.params).p12pass || '' }}
          project-path: input/${{ fromJSON(github.event.inputs.params).projectpath }}
          workspace-path: input/${{ fromJSON(github.event.inputs.params).projectworkspace }}
          scheme: ${{ fromJSON(github.event.inputs.params).scheme }}
          configuration: ${{ fromJSON(github.event.inputs.params).configuration }}
          export-method: ${{ fromJSON(github.event.inputs.params).exportmethod }}
          output-path: output-${{ fromJSON(github.event.inputs.params).configuration }}.ipa
          export-options: |
            ./export.plist
            ./provision/${{ fromJSON(github.event.inputs.params).projectid }}/${{ fromJSON(github.event.inputs.params).provisionfile != '' && fromJSON(github.event.inputs.params).provisionfile || fromJSON(github.event.inputs.params).branch }}.plist
      - name: Upload to release
        id: release
        uses: muhamad-rizki/action-gh-release@v3.0.1
        with:
          repository: ${{ fromJSON(github.event.inputs.params).releaseTo }}
          token: ${{ secrets.GH_PAT }}
          files: |
            output-${{ fromJSON(github.event.inputs.params).configuration }}.ipa
            manifest.plist
            AppStoreInfo.plist
          tag_name: "v${{ steps.package-version.outputs.current-version}}-${{ fromJSON(github.event.inputs.params).configuration }}-${{ fromJSON(github.event.inputs.params).branch }}"
          body: "IPA Release v${{ steps.package-version.outputs.current-version}} (${{ fromJSON(github.event.inputs.params).configuration }})"
          body_path: ./input/${{ fromJSON(github.event.inputs.params).releasenote != '' && fromJSON(github.event.inputs.params).releasenote || 'releasenote.md' }}
      - name: Update DB
        run: |
          curl -s -L -X POST \
          -H "X-AppCenter-Secret: ${{ secrets.APPCENTER_SECRET }}" \
          https://${{ secrets.APPCENTER_DOMAIN }}/projects/${{ fromJSON(github.event.inputs.params).projectid }}/release?id=${{ steps.release.outputs.id }}
