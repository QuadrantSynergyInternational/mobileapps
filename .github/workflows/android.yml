name: Build Android APK
on:
  workflow_dispatch:
    inputs:
      params:
        type: string
        description: Build Params
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        run: git clone --depth=1 --single-branch --branch=${{ fromJSON(github.event.inputs.params).branch }} https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@${{ fromJSON(github.event.inputs.params).repo }} input
      - name: Get Apps Version
        id: package-version
        working-directory: input
        run: |
          current_version=$(node -e "console.log(require('./package.json').version)")
          echo "current-version=$current_version" >> "$GITHUB_OUTPUT"
      - name: Logging
        run: |
          curl -s -L -G -X POST \
          -H "X-AppCenter-Secret: ${{ secrets.APPCENTER_SECRET }}" \
          --data-urlencode 'wf_id=${{ github.run_id }}' \
          --data-urlencode 'params=${{ github.event.inputs.params }}' \
          --data-urlencode 'uniqueId=${{ fromJSON(github.event.inputs.params).uniqueId }}' \
          --data-urlencode 'version=${{ steps.package-version.outputs.current-version }}' \
          --data-urlencode 'platform=android' \
          https://${{ secrets.APPCENTER_DOMAIN }}/projects/${{ fromJSON(github.event.inputs.params).projectid }}/trigger-log
      - name: Setup Java JDK
        uses: actions/setup-java@v4.4.0
        if: ${{ fromJSON(github.event.inputs.params).java != '' }}
        with:
          java-version: ${{ fromJSON(github.event.inputs.params).java }}
          distribution: corretto
      - name: Setup Android NDK
        if: ${{ fromJSON(github.event.inputs.params).ndk != '' }}
        uses: nttld/setup-ndk@v1.5.0
        with:
          ndk-version: ${{ fromJSON(github.event.inputs.params).ndk }}
          add-to-path: true
          link-to-sdk: true
          local-cache: true
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.4
        if: ${{ fromJSON(github.event.inputs.params).node != '' }}
        with:
          node-version: ${{ fromJSON(github.event.inputs.params).node }}
      - name: Initialize watchman
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install watchman
      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-${{ fromJSON(github.event.inputs.params).projectid }}
      #   with:
      #     path: |
      #       - ./input/node_modules
      #       - ./input/yarn.lock
      #       - ./input/ios/Pods
      #       - ./input/ios/Podfile.lock
      #     key: ${{ secrets.APPCENTER_SECRET }}
      #     restore-keys: ${{ secrets.APPCENTER_SECRET }}
      - name: Yarn Install
        working-directory: input
        run: yarn install
      - name: Gradle Build
        working-directory: input/android
        run: ./gradlew assemble${{ fromJSON(github.event.inputs.params).flavor }}${{ fromJSON(github.event.inputs.params).configuration }} ${{ fromJSON(github.event.inputs.params).gradlecmd }}
      - name: Upload to release
        id: release
        uses: muhamad-rizki/action-gh-release@v3.0.1
        with:
          repository: ${{ fromJSON(github.event.inputs.params).releaseTo }}
          token: ${{ secrets.GH_PAT }}
          files: |
            input/**/outputs/**/*.apk
            input/**/outputs/**/*.aab
          tag_name: "v${{ steps.package-version.outputs.current-version}}-${{ fromJSON(github.event.inputs.params).configuration }}-${{ fromJSON(github.event.inputs.params).branch }}"
          body: "APK Release v${{ steps.package-version.outputs.current-version}} (${{ fromJSON(github.event.inputs.params).configuration }})"
          body_path: ./input/${{ fromJSON(github.event.inputs.params).releasenote != '' && fromJSON(github.event.inputs.params).releasenote || 'releasenote.md' }}
      - name: Update DB
        run: |
          curl -s -L -X POST \
          -H "X-AppCenter-Secret: ${{ secrets.APPCENTER_SECRET }}" \
          https://${{ secrets.APPCENTER_DOMAIN }}/projects/${{ fromJSON(github.event.inputs.params).projectid }}/release?id=${{ steps.release.outputs.id }}
      - name: Clean Up
        run: rm -rf ./input/node_modules
      - name: Upload Source Maps
        id: release-maps
        uses: muhamad-rizki/action-gh-release@v3.0.1
        with:
          repository: ${{ fromJSON(github.event.inputs.params).releaseTo }}
          token: ${{ secrets.GH_PAT }}
          files: |
            ./**/mapping.txt
            ./**/*.dSYM
            ./**/*.map
          tag_name: "v${{ steps.package-version.outputs.current-version}}-${{ fromJSON(github.event.inputs.params).configuration }}-${{ fromJSON(github.event.inputs.params).branch }}"
